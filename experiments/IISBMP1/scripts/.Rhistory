# biogas1 <- biogas[biogas$exper == 1, ]
# Manometric biogas calculation
which(is.na(biogas$pres.init))
biogas.man <- biogas[!is.na(biogas$pres.init), ]
cbg.man <- cumBg(biogas.man, dat.type = 'pres', temp = 35,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'pres.init', comp.name = 'xCH4',
temp.init = 20,
pres.resid = 0, pres.init = 0, pres.amb = 1.01325,
headspace = setup, vol.hs.name = 'vol.hs',
extrap = TRUE,
absolute = FALSE)
# NTS: check if the temperature and pressure is recorded or should be adjusted
# Gravimetric biogas calculation
which(is.na(biogas$mass.init))
which(is.na(biogas$mass.final))
biogas.grav <- biogas[!is.na(biogas$mass.init), ]
cbg.grav <- cumBg(biogas.grav, dat.type = 'mass',
temp = 30, pres = 1.01,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'mass.final', comp.name = 'xCH4',
headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
temp.init = 20,
extrap = TRUE)
# Volumetric biogas calculation
which(is.na(biogas$vol))
biogas.vol <- biogas[!is.na(biogas$vol), ]
cbg.vol <- cumBg(biogas.vol, dat.type = 'vol',
temp = 20, pres = 1.01325,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'vol', comp.name = 'xCH4',
headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE)
# Biogas by gd
biogas <- biogas[order(biogas$id, biogas$elapsed.time), ]
biogas.gd <- biogas[!is.na(biogas$vol) & !is.na(biogas$mass.init) & !is.na(biogas$mass.final), ]
cbg.gd <- as.data.frame(mutate(group_by(biogas, id.exper), cvol = cumsum(vol), cmassloss = mass.final[1]-mass.final))
# Make a GD data frame
cbg.gd$xCH4 <- gdComp(cbg.gd$cmassloss, cbg.gd$cvol, temp = 20, pres = 1.01325)
cbg.gd <- cumBg(cbg.gd, dat.type = 'vol',
temp = 20, pres = 101.325,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'vol', comp.name = 'xCH4',
headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
showt0 = FALSE, temp.init = 20,
addt0 = FALSE, extrap = TRUE)
cbg.gd <- as.data.frame(mutate(group_by(biogas.gd, id.exper), cvol = cumsum(vol), cmassloss = mass.final[1]-mass.final))
# Make a GD data frame
cbg.gd$xCH4 <- gdComp(cbg.gd$cmassloss, cbg.gd$cvol, temp = 20, pres = 1.01325)
cbg.gd <- cumBg(cbg.gd, dat.type = 'vol',
temp = 20, pres = 101.325,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'vol', comp.name = 'xCH4',
headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
showt0 = FALSE, temp.init = 20,
addt0 = FALSE, extrap = TRUE)
cbg.gd <- cumBg(cbg.gd, dat.type = 'vol',
temp = 20, pres = 1.01325,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'vol', comp.name = 'xCH4',
headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
showt0 = FALSE, temp.init = 20,
addt0 = FALSE, extrap = TRUE)
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
cbg.list <- list(vol = cbg.vol, man = cbg.man, grav = cbg.grav, gd = cbg.gd)
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
View(cbg.list)
View(setup)
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "Inoculum", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# cumBg() calls and gdComp
# NTS: is extrapolation for BMP really needed?
# Set biogas options
options(unit.pres = 'bar', pres.std = 1.01325)
# NB: Sasha calculates for biogas for each experiment individually, why not do it from one dataset?
# Set BMP duration for all calls
when.BMP <- 30
# Only use experiment 1 (remeber to change to biogas1 when removing the NAs too)
# biogas1 <- biogas[biogas$exper == 1, ]
# Manometric biogas calculation
which(is.na(biogas$pres.init))
biogas.man <- biogas[!is.na(biogas$pres.init), ]
cbg.man <- cumBg(biogas.man, dat.type = 'pres', temp = 35,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'pres.init', comp.name = 'xCH4',
temp.init = 20,
pres.resid = 0, pres.init = 0, pres.amb = 1.01325,
headspace = setup, vol.hs.name = 'vol.hs',
extrap = TRUE,
absolute = FALSE)
# NTS: check if the temperature and pressure is recorded or should be adjusted
# Gravimetric biogas calculation
which(is.na(biogas$mass.init))
which(is.na(biogas$mass.final))
biogas.grav <- biogas[!is.na(biogas$mass.init), ]
cbg.grav <- cumBg(biogas.grav, dat.type = 'mass',
temp = 30, pres = 1.01,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'mass.final', comp.name = 'xCH4',
headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
temp.init = 20,
extrap = TRUE)
# Volumetric biogas calculation
which(is.na(biogas$vol))
biogas.vol <- biogas[!is.na(biogas$vol), ]
cbg.vol <- cumBg(biogas.vol, dat.type = 'vol',
temp = 20, pres = 1.01325,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'vol', comp.name = 'xCH4',
headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE)
# Biogas by gd
biogas <- biogas[order(biogas$id, biogas$elapsed.time), ]
biogas.gd <- biogas[!is.na(biogas$vol) & !is.na(biogas$mass.init) & !is.na(biogas$mass.final), ]
cbg.gd <- as.data.frame(mutate(group_by(biogas.gd, id.exper), cvol = cumsum(vol), cmassloss = mass.final[1]-mass.final))
# Make a GD data frame
cbg.gd$xCH4 <- gdComp(cbg.gd$cmassloss, cbg.gd$cvol, temp = 20, pres = 1.01325)
# volumetric less sensitive to comp.therefore, use this one with GD. Can also try others afterwards.
## But when using dat.type = 'vol' - wont it affect the results which method is used?
cbg.gd <- cumBg(cbg.gd, dat.type = 'vol',
temp = 20, pres = 1.01325,
data.struct = 'longcombo',
id.name = 'id.exper', time.name = 'elapsed.time',
dat.name = 'vol', comp.name = 'xCH4',
headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
showt0 = FALSE, temp.init = 20,
addt0 = FALSE, extrap = TRUE)
cbg.list <- list(vol = cbg.vol, man = cbg.man, grav = cbg.grav, gd = cbg.gd)
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
# Note the set.name argument. The code above would give you a new column (1st one) in the output with the name "method".
# You will then be able to cut some code from merge.R as well.
# o for "obs" = one value for each bottle
#BMPo <- ... show.obs = TRUE)
BMPo <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method', show.obs = TRUE)
# yld for yield
#yld <- ... when = 'meas')
yld <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = 'meas', extrap = TRUE, set.name = 'method')
cbg.list <- list(vol = cbg.vol, man = cbg.man, grav = cbg.grav, gd = cbg.gd)
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
BMP <- summBg(cbg.list, setup, id.name = "id.exper",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
View(BMP)
View(cbg.gd)
View(cbg.grav)
View(cbg.list)
View(cbg.man)
View(cbg.vol)
BMP <- summBg(cbg.list, setup, id.name = "id.exper",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
# o for "obs" = one value for each bottle
#BMPo <- ... show.obs = TRUE)
BMPo <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method', show.obs = TRUE)
# o for "obs" = one value for each bottle
#BMPo <- ... show.obs = TRUE)
BMPo <- summBg(cbg.list, setup, id.name = "id.exper",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method', show.obs = TRUE)
View(BMPo)
# yld for yield
#yld <- ... when = 'meas')
yld <- summBg(cbg.list, setup, id.name = "id.exper",
time.name = 'elapsed.time', descrip.name = 'id.exper',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = 'meas', extrap = TRUE, set.name = 'method')
# yld for yield
#yld <- ... when = 'meas')
yld <- summBg(cbg.list, setup, id.name = "id.exper",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = 'meas', extrap = TRUE, set.name = 'method')
View(yld)
# Runs complete analysis of IISBMP1 data
# Camilla G. Justesen
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculate biogas production
source('biogas.R')
# Calculate leakage from biogas bottles
source('leak.R')
args(leakBg)
View(biogas)
#source('functions.R')
leaks <- leakBg(biogas,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id.exper')
leaks <- leakBg(biogas.gd,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id.exper')
leaks <- leakBg(biogas.gd,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id.exper')
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculate biogas production
# Calculate biogas production
source('biogas.R')
# Calculate leakage from biogas bottles
source('leak.R')
which(is.na(biogas$mass.init))
which(is.na(biogas$mass.final))
biogas.leak <- biogas[!is.na(biogas$mass.init) & !is.na(biogas$mass.final), ]
leaks <- leakBg(biogas.leak,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id.exper')
leaks <- leakBg(biogas.leak,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id')
View(biogas.leak)
which(is.na(biogas$mass.init))
which(is.na(biogas$mass.final))
which(is.na(biogas.leak$mass.init))
leaks <- leakBg(biogas.leak,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id.exper')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Cleaning of data and organizing for analysis
# Make id a factor instead of a character
#comp$id <- factor(comp$id)
biogas$id <- factor(biogas$id)
setup$id <- factor(setup$id)
biogas$exper <- factor(biogas$exper)
setup$exper <- factor(setup$exper)
# Clean comp data
## Delete extra columns
comp <- comp[, c('exper', 'id', 'date', 'inject.date.time', 'xCH4', 'xCH4.oa')]
write.csv(comp, '../output/comp.csv', row.names = FALSE)
# Clean biogas data
# Discard all rows with water controls (have NAs)
water <- subset(biogas, grepl('W', biogas$id))
biogas <- droplevels(subset(biogas, !grepl('^W', id)))
write.csv(water, '../output/water.csv', row.names = FALSE)
# Change from characters to numeric - DELETE?
biogas$mass.init <- as.numeric(biogas$mass.init)
#biogas$date <- as.numeric(biogas$date)
# Add leading zeros
biogas$date <- sprintf('%08i', biogas$date)
biogas$time <- sprintf('%04i', biogas$time)
write.csv(biogas, '../output/biogas.csv', row.names = FALSE)
#-----------
# Merge composition data with biogas data by id and date
# Problem with two B3 measurements one day - note from Sasha
biogas <- merge(biogas, comp, by = c('exper', 'id', 'date'))
# Make a date/time column
biogas$date.time <- dmy_hm(paste0(biogas$date, biogas$time))
sum(is.na(biogas$date.time))
# Make a cummulative date.time column
biogas <- as.data.frame(mutate(group_by(biogas, exper, id), start.time = min(date.time)))
biogas$elapsed.time <- as.numeric(difftime(biogas$date.time, biogas$start.time, units = 'days'))
# Check times
print(sort(unique(biogas$elapsed.time)))
# Making a column with id + exper for comparison
biogas$id.exper <- paste0(biogas$id, "-E", biogas$exper)
setup$id.exper <- paste0(setup$id, "-E", setup$exper)
head(biogas$id.exper)
head(setup$id.exper)
# Comp data set - Is this relevant if it is merged correctly into the biogas frame??
# Use start time from biogas for all calculations (min date.time in comp is not trial start)
starts <- summarise(group_by(biogas, id), start.time = min(date.time))
comp <- merge(comp, starts, by = "id")
comp$elapsed.time <- difftime(comp$date.time, comp$start.time, units = 'days')
# Make a subset for each expriment eventually
# q <- biogas[, c('id', 'date')]
# r <- comp[, c('id', 'date')]
# identical(q,r)
# x <- merge(q,r, by = 'date')
# Clean data
source('clean.R')
# Calculate biogas production
source('biogas.R')
# Calculate leakage from biogas bottles
#source('functions.R')
which(is.na(biogas$mass.init))
which(is.na(biogas$mass.final))
biogas.leak <- biogas[!is.na(biogas$mass.init) & !is.na(biogas$mass.final), ]
leaks <- leakBg(biogas.leak,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id.exper')
# Leakage function
source('../../../functions/leakage.R')
leaks <- leakBg(biogas.leak,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id.exper')
View(leaks)
l <- leaks[order(leaks$id.exper, biogas$elapsed.time), ]
l <- leaks[order(leaks$id.exper, leaks$elapsed.time), ]
l <- leaks[order(biogas.leak$id.exper, biogas.leak$elapsed.time), ]
leaks <- leakBg(biogas.leak,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id.exper')
write.csv(leaks, '../output/leak.csv', row.names = FALSE)
#CSV for excel
write_excel_csv(leaks, '../output/leak.csv', na = "NA", append =
FALSE, col_names = !append)
#CSV for excel
write_excel_csv(leaks, '../output/leak.csv', na = "NA", append = FALSE, col_names = !append)
View(l)
write.table(leaks, '../output/leak.txt', sep="\t")
write.xlsx(leaks, '../output/leak.txt')
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculate biogas production
source('biogas.R')
which(is.na(biogas$mass.init))
which(is.na(biogas$mass.final))
biogas.leak <- biogas[!is.na(biogas$mass.init) & !is.na(biogas$mass.final), ]
l <- leaks[order(biogas.leak$id.exper, biogas.leak$elapsed.time), ]
leaks <- leakBg(l,
time.name = 'elapsed.time',
m.init.name = 'mass.init', m.final.name = 'mass.final',
id.name = 'id.exper')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculate biogas production
source('biogas.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculate biogas production
source('biogas.R')
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculate biogas production
source('biogas.R')
View(cbg.gd)
# Bind by rows
cbg.vol$method <- 'vol'
cbg.man$method <- 'man'
cbg.grav$method <- 'grav'
cbg.gd$method <- 'gd'
cbg.all <- biogas:::rbindf(cbg.vol, cbg.man, cbg.grav, cbg.gd)
View(cbg.all)
# Add substrate type and other needed variables with merge of some columns from setup
cbg.all <- merge(cbg.all, setup[, c('id', 'descrip')], by = 'id')
#----------------
# Bind by column instead
reshaped.BMP <- reshape(data = BMP,
idvar = c('descrip', 'elapsed.time', 'n'),
timevar = 'method',
direction = 'wide')
View(reshaped.BMP)
#----------------
# Bind by column instead
reshaped.BMP <- reshape(data = BMP,
idvar = c('id.exper', 'elapsed.time', 'n'),
timevar = 'method',
direction = 'wide')
View(BMP)
BMP <- summBg(cbg.list, setup, id.name = "id.exper",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
# As there is only one value in 5 of the id.exper interpolation is not possile.
merge(BMP, biogas$id.exper)
# As there is only one value in 5 of the id.exper interpolation is not possile.
merge(BMP, biogas$id.exper, by = id)
# As there is only one value in 5 of the id.exper interpolation is not possile.
merge(BMP, biogas$id.exper, by = 'id')
View(biogas)
# As there is only one value in 5 of the id.exper interpolation is not possile.
merge(BMP, biogas$id.exper, by = 'descrip')
# As there is only one value in 5 of the id.exper interpolation is not possile.
biogas[, c('id', 'exper')]
BMP <- summBg(cbg.list, setup, id.name = "id.exper",
time.name = 'elapsed.time', descrip.name = 'id',
inoc.name = "I", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
View(setup)
# As there is only one value in 5 of the id.exper interpolation is not possile.
setup[, c('id', 'descrip')]
id.descrip <- setup[, c('id', 'descrip')]
merge(id.descrip, biogas,by = 'id')
biogas.BMP <- merge(BMP, biogas$id.exper, by = 'descrip')
biogas.BMP <- merge(BMP, biogas$id.descrip, by = 'descrip')
View(id.descrip)
biogas.BMP <- merge(biogas, id.descrip, by = 'descrip')
biogas.BMP <- merge(biogas, id.descrip, by = 'id')
View(biogas.BMP)
#----------------
# Bind by column instead
reshaped.BMP <- reshape(data = BMP,
idvar = c('id.exper', 'elapsed.time', 'n'),
timevar = 'method',
direction = 'wide')
#----------------
# Bind by column instead
reshaped.BMP <- reshape(data = biogas.BMP,
idvar = c('id.exper', 'elapsed.time', 'n'),
timevar = 'method',
direction = 'wide')
View(biogas.BMP)
View(BMP)
View(biogas.BMP)
#----------------
# Bind by column instead
reshaped.BMP <- reshape(data = biogas.BMP,
idvar = c('id.exper', 'elapsed.time', 'n'),
timevar = 'method',
direction = 'wide')
biogas.BMP1 <- merge(biogas.BMP, BMP, by = 'descrip')
View(biogas.BMP1)
# First, make a data frame containing descrip:
id.descrip <- setup[, c('id', 'descrip')]
biogas.BMP <- merge(biogas, id.descrip, by = 'id')
biogas.BMP1 <- merge(biogas.BMP, BMP, by = 'descrip')
biogas.BMP1 <- biogas.BMP1[ , c('method', 'id', 'descrip', 'elapsed.time', 'mean', 'sd', 'se', 'n')]
biogas.BMP1 <- biogas.BMP1[ ,
c('method', 'id', 'descrip', 'elapsed.time', 'mean', 'sd', 'se', 'n', 'id.exper')]
biogas.BMP1 <- select(biogas.BMP1$method, biogas.BMP1$id, biogas.BMP1$id.exper, biogas.BMP1$descrip)
factor(c('method', 'id', 'descrip', 'elapsed.time', 'mean', 'sd', 'se', 'n', 'id.exper'))
biogas.BMP1 <- biogas.BMP1[ ,
c('method', 'id', 'descrip', 'elapsed.time', 'mean', 'sd', 'se', 'n', 'id.exper')]
View(BMP)
