source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Remove all substrates having any leaks
no.leaks2.biogas <- subset(no.leaks2.biogas, !descrip %in% c('Cellulose', 'CB'))
# Calculate biogas production
source('biogas.R')
source('cumBgGDcomparison.R')
View(cbg.gd03)
# Calculate BMP, yld and BMPo
#source('BMP.R')
source('BMPcomp.R')
View(biogas.gd)
# Calculate BMP, yld and BMPo
#source('BMP.R')
source('BMPcomp.R')
View(cbg.gd03)
# Calculate BMP, yld and BMPo
#source('BMP.R')
source('BMPcomp.R')
# Clean data prior to analysis
source('merge.R')
# Graphical comparison of methods
# source('plots.R')
source('plot.cumBgGD.comparison.R')
# USED IN PAPER PART 3A.
BMPSubC <- subset(BMP2, descrip == 'FIC')
BMPSubC$lwr <- BMPSubC$mean - BMPSubC$sd
BMPSubC$upr <- BMPSubC$mean + BMPSubC$sd
labels <- c(gd01 = 'GD01', gd02 = 'GD02', gd03 = 'GD03', gd04 = 'GD04', gd05 = 'GD05', gd06 = 'GD06',
gd07 = 'GD07', gd08 = 'GD08', gd09 = 'GD09', gd10 = 'GD10', gd11 = 'GD11', gd12 = 'GD12',
grav = 'Gravimetric')
BMPSubC$method.label <- labels[BMPSubC$method]
# Only plot with substrate C
ggplot(BMPSubC) +
geom_col(aes(method.label, mean, fill = descrip), position = 'dodge', colour  = 'black') +
geom_errorbar(aes(method.label, ymin = lwr, ymax = upr, group = descrip), position = 'dodge', colour = 'gray55') +
#facet_grid(. ~ exper, scales = 'free_x') +
labs(x = 'Method', y = expression('BMP [mL/g]'), fill = 'Substrate') + theme_bw()+
theme(axis.text.x = element_text(angle = 30, hjust = 1))  + guides(fill = FALSE) +
ggsave('../plots/BarplotR_3A.png')
# Only plot with substrate C
ggplot(BMPSubC) +
geom_col(aes(method.label, mean, fill = descrip), position = 'dodge', colour  = 'black') +
geom_errorbar(aes(method.label, ymin = lwr, ymax = upr, group = descrip), position = 'dodge', colour = 'gray55') +
#facet_grid(. ~ exper, scales = 'free_x') +
labs(x = 'Method', y = expression('BMP [mL/g]'), fill = 'Substrate') + theme_bw()+
theme(axis.text.x = element_text(angle = 30, hjust = 1))  + guides(fill = FALSE) +
ggsave('../plots/BarplotR_3A.png', height = 3, width = 5)
View(BMP2)
# USED IN PAPER PART 3A.
BMPSubC <- subset(BMP2, descrip == 'FIC')
BMPSubC$lwr <- BMPSubC$mean - BMPSubC$sd
BMPSubC$upr <- BMPSubC$mean + BMPSubC$sd
View(BMPSubC)
labels <- c(gd01 = 'GD01', gd02 = 'GD02', gd03 = 'GD03', gd04 = 'GD04', gd05 = 'GD05', gd06 = 'GD06',
gd07 = 'GD07', gd08 = 'GD08', gd09 = 'GD09', gd10 = 'GD10', gd11 = 'GD11', gd12 = 'GD12',
grav = 'Gravimetric')
BMPSubC$method.label <- labels[BMPSubC$method]
BMPSubC <- subset(BMP2, !method == c('vol', 'man'))
BMPSubC <- subset(BMP2, descrip == 'FIC')
BMPSubC <- subset(BMP2, !method == c('vol', 'man'))
View(BMPSubC)
BMPSubC <- subset(BMP2, !method == 'man')
BMPSubC <- subset(BMP2, !method == 'vol')
# USED IN PAPER PART 3A.
BMPSubC <- subset(BMP2, descrip == 'FIC')
BMPSubC <- subset(SubC, !method == 'man')
# USED IN PAPER PART 3A.
BMPSubC <- subset(BMP2, descrip == 'FIC')
BMPSubC <- subset(BMPSubC, !method == 'man')
BMPSubC <- subset(BMPSubC, !method == 'vol')
BMPSubC$lwr <- BMPSubC$mean - BMPSubC$sd
BMPSubC$upr <- BMPSubC$mean + BMPSubC$sd
labels <- c(gd01 = 'GD01', gd02 = 'GD02', gd03 = 'GD03', gd04 = 'GD04', gd05 = 'GD05', gd06 = 'GD06',
gd07 = 'GD07', gd08 = 'GD08', gd09 = 'GD09', gd10 = 'GD10', gd11 = 'GD11', gd12 = 'GD12',
grav = 'Gravimetric')
BMPSubC$method.label <- labels[BMPSubC$method]
# Only plot with substrate C
ggplot(BMPSubC) +
geom_col(aes(method.label, mean, fill = descrip), position = 'dodge', colour  = 'black') +
geom_errorbar(aes(method.label, ymin = lwr, ymax = upr, group = descrip), position = 'dodge', colour = 'gray55') +
#facet_grid(. ~ exper, scales = 'free_x') +
labs(x = 'Method', y = expression('BMP [mL/g]'), fill = 'Substrate') + theme_bw()+
theme(axis.text.x = element_text(angle = 30, hjust = 1))  + guides(fill = FALSE) +
ggsave('../plots/BarplotR_3A.png', height = 3, width = 5)
# Supplementary table
cbg.gd.result <- subset(cbg.gd03, elapsed.time > 30 & elapsed.time < 32)
setup.suppl <- setup[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.sub.vs')]
names(setup)
View(setup2)
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Subsetting to get rid of missing values
source('subset.R')
water.s2 <- subset(setup2, grepl('W', setup$id))
setup2 <- droplevels(subset(setup2, !grepl('^W', id)))
# Clean data
source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Remove all substrates having any leaks
no.leaks2.biogas <- subset(no.leaks2.biogas, !descrip %in% c('Cellulose', 'CB'))
# Calculate biogas production
source('biogas.R')
source('cumBgGDcomparison.R')
# Calculate BMP, yld and BMPo
#source('BMP.R')
source('BMPcomp.R')
# Clean data prior to analysis
source('merge.R')
# Graphical comparison of methods
# source('plots.R')
source('plot.cumBgGD.comparison.R')
# Export results
source('export_results.R')
# Export tables
cbg.gd.result <- subset(cbg.gd06, elapsed.time > 30 & elapsed.time < 32)
setup.suppl <- setup[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.sub.vs')]
setup.suppl <- setup2[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.sub.vs')]
names(setup2)
setup.suppl <- setup2[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'c.inoc.vs' , 'c.sub.vs')]
cbg.gd.result <- cbg.gd.result[, c('descrip', 'id',
'mass.init', 'mass.final',
"cmass.tot",
'cvBg', 'xCH4', 'cvCH4')]
# Export tables
cbg.gd.result <- subset(cbg.gd03, elapsed.time > 30 & elapsed.time < 32)
setup.suppl <- setup2[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'c.inoc.vs' , 'c.sub.vs')]
cbg.gd.result <- cbg.gd.result[, c('descrip', 'id',
'mass.init', 'mass.final',
"cmass.tot",
'cvBg', 'xCH4', 'cvCH4')]
suppl <- merge(setup.suppl, cbg.gd.result, by = c('descrip', 'id') )
View(suppl)
suppl$cvBg <- round(suppl$cvBg, 0)
suppl$cvCH4 <- round(suppl$cvCH4, 0)
suppl$cmass.tot <- round(suppl$cmass.tot, 2)
suppl$m.tot <- round(suppl$m.tot, 2)
suppl$xCH4 <- round(suppl$xCH4, 2)
suppl$conc.sub.vs <- round(suppl$conc.sub.vs, 2)
names(suppl) <- c("Sub. type", "ID",
'Inoc. mass [g]', 'Sub. mass [g]', 'Total mass [g]',
'Sub. VS conc. [g/kg]', 'Inoc. VS conc. [g/kg]'
'Initial mass [g]', 'Final mass [g]',
'Cum total mass [g]',
'Cum biogas [mL]', 'xCH4 [mol/mol]', 'Cum CH4 [mL]')
names(suppl) <- c("Sub. type", "ID",
'Inoc. mass [g]', 'Sub. mass [g]', 'Total mass [g]',
'Sub. VS conc. [g/kg]', 'Inoc. VS conc. [g/kg]',
'Initial mass [g]', 'Final mass [g]',
'Cum total mass [g]',
'Cum biogas [mL]', 'xCH4 [mol/mol]', 'Cum CH4 [mL]')
write.csv(suppl, '../results/suppl.csv', row.names = FALSE)
# Supplementary table
# Export tables
cbg.gd.result <- subset(cbg.gd03, elapsed.time > 30 & elapsed.time < 32)
setup.suppl <- setup2[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'c.inoc.vs' , 'c.sub.vs')]
cbg.gd.result <- cbg.gd.result[, c('descrip', 'id',
'mass.init', 'mass.final',
"cmass.tot",
'cvBg', 'xCH4', 'cvCH4')]
suppl <- merge(setup.suppl, cbg.gd.result, by = c('descrip', 'id') )
suppl$cvBg <- round(suppl$cvBg, 0)
suppl$cvCH4 <- round(suppl$cvCH4, 0)
suppl$cmass.tot <- round(suppl$cmass.tot, 2)
suppl$m.tot <- round(suppl$m.tot, 2)
suppl$xCH4 <- round(suppl$xCH4, 2)
suppl$conc.sub.vs <- round(suppl$conc.sub.vs, 2)
names(suppl) <- c("Sub. type", "ID",
'Inoc. mass [g]', 'Sub. mass [g]', 'Total mass [g]',
'Sub. VS conc. [g/kg]', 'Inoc. VS conc. [g/kg]',
'Initial mass [g]', 'Final mass [g]',
'Cum total mass [g]',
'Cum biogas [mL]', 'xCH4 [mol/mol]', 'Cum CH4 [mL]')
write.csv(suppl, '../results/suppl.csv', row.names = FALSE)
# Supplementary table
# Export tables
cbg.gd.result <- subset(cbg.gd03, elapsed.time > 30 & elapsed.time < 32)
setup.suppl <- setup2[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'c.inoc.vs' , 'c.sub.vs')]
cbg.gd.result <- cbg.gd.result[, c('descrip', 'id',
'mass.init', 'mass.final',
"cmass.tot",
'cvBg', 'xCH4', 'cvCH4')]
suppl <- merge(setup.suppl, cbg.gd.result, by = c('descrip', 'id') )
suppl$cvBg <- round(suppl$cvBg, 0)
suppl$cvCH4 <- round(suppl$cvCH4, 0)
suppl$cmass.tot <- round(suppl$cmass.tot, 2)
suppl$m.tot <- round(suppl$m.tot, 2)
suppl$xCH4 <- round(suppl$xCH4, 2)
suppl$conc.sub.vs <- round(suppl$conc.sub.vs, 2)
names(suppl) <- c("Sub. type", "ID",
'Inoc. mass [g]', 'Sub. mass [g]', 'Total mass [g]',
'Sub. VS conc. [g/kg]', 'Inoc. VS conc. [g/kg]',
'Initial mass [g]', 'Final mass [g]',
'Cum total mass [g]',
'Cum biogas [mL]', 'xCH4 [mol/mol]', 'Cum CH4 [mL]')
write.csv(suppl, '../results/suppl.csv', row.names = FALSE)
# Load functions
source('functions.R')
setwd("~/GitHub/GD-BMP/experiments/UQ2/gd/scripts")
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
View(setup)
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Calculate biogas production
#source('biogas.R')
source('cumBgGDcomparison.R')       # includes all methods
View(cbg.gd3)
# Calculate BMP, yld and BMPo
# source('BMP.R')
source('BMPcomp.R')
View(BMP)
# Clean data prior to analysis
source('merge.R')
# Graphical comparison of methods
source('plots.R')
source('xCH4.plots.R')
# Export results
source('export_results.R')
# Export tables
cbg.gd.result <- subset(cbg.gd03, elapsed.time > 30 & elapsed.time < 32)
# Export tables
cbg.gd.result <- subset(cbg.gd03, elapsed.time > 27 & elapsed.time < 30)
# Export tables
cbg.gd.result <- subset(cbg.gd3, elapsed.time > 27 & elapsed.time < 30)
setup.suppl <- setup[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.sub.vs')]
names(setup)
# Runs complete analysis of UQ2gd data
# Camilla G. Justesen
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Calculate biogas production
#source('biogas.R')
source('cumBgGDcomparison.R')       # includes all methods
# Calculate BMP, yld and BMPo
# source('BMP.R')
source('BMPcomp.R')
# Clean data prior to analysis
source('merge.R')
# Graphical comparison of methods
source('plots.R')
source('xCH4.plots.R')
# Export results
source('export_results.R')
# Export tables
cbg.gd.result <- subset(cbg.gd3, elapsed.time > 27 & elapsed.time < 30)
setup.suppl <- setup[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.sub.vs')]
cbg.gd.result <- cbg.gd.result[, c('descrip', 'id',
'mass.init', 'mass.final',
"cmass.tot",
'cvBg', 'xCH4', 'cvCH4')]
setup.suppl <- setup[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.inoc.vs', 'conc.sub.vs')]
View(setup)
setup.suppl <- setup[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.ino.vs', 'conc.sub.vs')]
cbg.gd.result <- cbg.gd.result[, c('descrip', 'id',
'mass.init', 'mass.final',
"cmass.tot",
'cvBg', 'xCH4', 'cvCH4')]
suppl <- merge(setup.suppl, cbg.gd.result, by = c('descrip', 'id') )
suppl$cvBg <- round(suppl$cvBg, 0)
suppl$cvCH4 <- round(suppl$cvCH4, 0)
suppl$cmass.tot <- round(suppl$cmass.tot, 2)
suppl$m.tot <- round(suppl$m.tot, 2)
suppl$xCH4 <- round(suppl$xCH4, 2)
suppl$conc.sub.vs <- round(suppl$conc.sub.vs, 2)
names(suppl) <- c("Sub. type", "ID",
'Inoc. mass [g]', 'Sub. mass [g]', 'Total mass [g]',
'Inoc. VS conc. [g/kg]', 'Sub. VS conc. [g/kg]',
'Initial mass [g]', 'Final mass [g]',
'Cum total mass [g]',
'Cum biogas [mL]', 'xCH4 [mol/mol]', 'Cum CH4 [mL]')
write.csv(suppl, '../results/suppl.csv', row.names = FALSE)
setwd("~/GitHub/GD-BMP/experiments/UQ2/man.grav/scripts")
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
View(setup)
# Clean data
source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Calculate biogas production
source('biogas.R')
when.BMP <- 27.1458333
# Calculate BMP, yld and BMPo
source('BMP.R')
# Clean data prior to analysis
source('merge.R')
# Graphical comparison of methods
source('plots.R')
# Export results
source('export_results.R')
# Export manipulated result tables
# Export tables
cbg.result <- subset(cbg.grav, elapsed.time > 27 & elapsed.time < 30)
setup.suppl <- setup[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.ino.vs', 'conc.sub.vs')]
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Calculate biogas production
source('biogas.R')
# Calculate BMP, yld and BMPo
source('BMP.R')
# Clean data prior to analysis
source('merge.R')
# Compare methods numerically
#source('numeric_comparison.R')
# Graphical comparison of methods
source('plots.R')
# Export results
source('export_results.R')
# Export manipulated result tables
# Export tables
cbg.result <- subset(cbg.grav, elapsed.time > 27 & elapsed.time < 30)
setup.suppl <- setup[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.ino.vs', 'conc.sub.vs')]
cbg.result <- cbg.result[, c('descrip', 'id',
'mass.init', 'mass.final',
"cmass.tot",
'cvBg', 'xCH4', 'cvCH4')]
setup.suppl <- setup[, c('descrip', 'id', 'm.inoc', 'm.sub', 'm.tot', 'conc.inoc.vs', 'conc.sub.vs')]
cbg.result <- cbg.result[, c('descrip', 'id',
'mass.init', 'mass.final',
"cmass.tot",
'cvBg', 'xCH4', 'cvCH4')]
suppl <- merge(setup.suppl, cbg.result, by = c('descrip', 'id') )
suppl$cvBg <- round(suppl$cvBg, 0)
suppl$cvCH4 <- round(suppl$cvCH4, 0)
suppl$cmass.tot <- round(suppl$cmass.tot, 2)
suppl$m.tot <- round(suppl$m.tot, 2)
suppl$xCH4 <- round(suppl$xCH4, 2)
suppl$conc.sub.vs <- round(suppl$conc.sub.vs, 2)
names(suppl) <- c("Sub. type", "ID",
'Inoc. mass [g]', 'Sub. mass [g]', 'Total mass [g]',
'Inoc. VS conc. [g/kg]', 'Sub. VS conc. [g/kg]',
'Initial mass [g]', 'Final mass [g]',
'Cum total mass [g]',
'Cum biogas [mL]', 'xCH4 [mol/mol]', 'Cum CH4 [mL]')
write.csv(suppl, '../results/suppl.csv', row.names = FALSE)
# Runs complete analysis of UQ2 data (man_grav)
# Camilla G. Justesen
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Calculate biogas production
source('biogas.R')
# Calculate BMP, yld and BMPo
source('BMP.R')
# Clean data prior to analysis
source('merge.R')
# Compare methods numerically
#source('numeric_comparison.R')
# Graphical comparison of methods
source('plots.R')
# Export results
source('export_results.R')
# Export manipulated results
source('export_manipulated.R')
# Runs complete analysis of UQ2 data (man_grav)
# Camilla G. Justesen
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Calculate biogas production
source('biogas.R')
# Calculate BMP, yld and BMPo
source('BMP.R')
# Clean data prior to analysis
source('merge.R')
# Compare methods numerically
#source('numeric_comparison.R')
# Graphical comparison of methods
source('plots.R')
# Export results
source('export_results.R')
# Export manipulated results
source('export_manipulated.R')
setwd("~/GitHub/GD-BMP/experiments/UQ2/gd/scripts")
# Runs complete analysis of UQ2gd data
# Camilla G. Justesen
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Calculate biogas production
#source('biogas.R')
source('cumBgGDcomparison.R')       # includes all methods
# Calculate BMP, yld and BMPo
# source('BMP.R')
source('BMPcomp.R')
# Clean data prior to analysis
source('merge.R')
# Graphical comparison of methods
source('plots.R')
source('xCH4.plots.R')
# Export results
source('export_results.R')
# Export manipulated results
source('export_manipulated.R')
# Calculate maximum theoretical BMP for the substrates
source('theoretical_BMP.R')
L1 <- subset(biogas, id == 'L1')
write.csv(L1, '../output/L1.csv', row.names = FALSE)
cbg.gd03 <- subset(cbg.gd3, id == 'L1')
write.csv(cbg.gd03, '../output/cbg.gd3.csv', row.names = FALSE)
cbg.all
# cumBgGD call for GD03
datL1 <- subset(dat, id == 'L1')
write.csv(datL1, '../output/datL1.csv', row.names = FALSE)
setwd("~/GitHub/GD-BMP/experiments/UQ2/compare/scripts")
# Load packages
source('packages.R')
# Load data
source('load.R')
# Bind dataset to one
source('merge.R')
# Graphical comparison of methods
source('plots.R')
source('xCH4.plots.R')
# Export results
source('export_results.R')
# Calculate the variations in percentage
source('compare.R')
