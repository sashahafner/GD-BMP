# man, grav and vol methods  - These should be the same as it is calculated from GC
# - What has been done in code to keep the xCH4 at the highest level instead of dropping?
ggplot(cbg.grav, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id))+
labs(x = 'Time [d]', y = 'CH4 Composition', colour = 'Substrate')  +
ggtitle('Composition Gravimetric GC') +
theme_bw() +
theme(text = element_text(size = 8))
# Plot all gd methods composition in one plot
cbg.gd.all <- biogas:::rbindf(
# cbg.vol, cbg.man,
cbg.grav,
#cbg.gd,
cbg.gd1, cbg.gd2, cbg.gd3, cbg.gd4, cbg.gd5, cbg.gd6,
comp1
cbg.gd7,
cbg.gd8, cbg.gd9,
cbg.gd10,
cbg.gd11, cbg.gd12
)
# Plot all gd methods composition in one plot
cbg.gd.all <- biogas:::rbindf(
# cbg.vol, cbg.man,
cbg.grav,
#cbg.gd,
cbg.gd1, cbg.gd2, cbg.gd3, cbg.gd4, cbg.gd5, cbg.gd6,
comp1,
cbg.gd7,
cbg.gd8, cbg.gd9,
cbg.gd10,
cbg.gd11, cbg.gd12
)
# Plot all gd methods composition in one plot
cbg.gd.all <- biogas:::rbindf(
# cbg.vol, cbg.man,
cbg.grav,
#cbg.gd,
cbg.gd01, cbg.gd02, cbg.gd03, cbg.gd04, cbg.gd05, cbg.gd06,
comp01,
cbg.gd07,
cbg.gd08, cbg.gd09,
cbg.gd10,
cbg.gd11, cbg.gd12
)
# Plot all gd methods composition in one plot
cbg.gd.all <- biogas:::rbindf(
# cbg.vol, cbg.man,
cbg.grav,
#cbg.gd,
cbg.gd01, cbg.gd02, cbg.gd03, cbg.gd04, cbg.gd05, cbg.gd06,
comp1,
cbg.gd07,
cbg.gd08, cbg.gd09,
cbg.gd10,
cbg.gd11, cbg.gd12
)
ggplot(cbg.gd.all, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper)) +
labs(x = 'Time [d]', y = 'CH4 Composition', colour = 'Substrate')  +
ggtitle('Composition Comparison') +
theme_bw() +
theme(text = element_text(size = 8)) +
facet_grid(method ~. )   # What is the best grid after adding all (or chosen) gd methods
ggsave('../plots/xCH4.png')
ggplot(cbg.gd.all, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper)) +
labs(x = 'Time [d]', y = 'CH4 Composition', colour = 'Substrate')  +
ggtitle('Composition Comparison') +
theme_bw() +
theme(text = element_text(size = 8)) +
facet_wrap(method ~. )   # What is the best grid after adding all (or chosen) gd methods
ggsave('../plots/xCH4.wrap.png')
ggplot(cbg.gd7, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd7.png')
ggplot(cbg.gd10, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd10.png')
ggsave('../plots/xCH4gd07.png')
# # Negative xCH4
ggplot(cbg.gd7, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
# # Negative xCH4
ggplot(cbg.gd07, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd7.png')
ggplot(cbg.gd10, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd10.png')
# # Straight (final)
ggplot(cbg.gd09, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd9.png')
ggplot(cbg.gd12, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd12.png')
ggplot(cbg.gd08, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd8.png')
ggplot(cbg.gd11, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd11.png')
# grav methods
ggplot(cbg.gd01, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd1.png')
# grav methods
ggplot(cbg.gd01, aes(elapsed.time, xCH4, colour = id)) +
geom_point() + geom_line(aes(group = id.exper))
# grav methods
ggplot(cbg.gd01, aes(elapsed.time, xCH4, colour = id)) +
geom_point() + geom_line(aes(group = id))
# grav methods
ggplot(cbg.gd01, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id))
# grav methods
ggplot(cbg.gd01, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggplot(cbg.gd02, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd2.png')
ggplot(cbg.gd03, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggplot(cbg.gd04, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd4.png')
ggplot(cbg.gd05, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd5.png')
ggplot(cbg.gd06, aes(elapsed.time, xCH4, colour = descrip)) +
geom_point() + geom_line(aes(group = id.exper))
ggsave('../plots/xCH4gd6.png')
setwd("~/GitHub/GD-BMP/experiments/IISBMP1/scripts")
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Subsetting to get rid of missing values
source('subset.R')
# Clean data
source('clean.R')
# Export raw data
source('export.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Remove all substrates having any leaks
no.leaks2.biogas <- subset(no.leaks2.biogas, !descrip %in% c('Cellulose', 'CB'))
# Calculate biogas production
source('biogas.R')
source('cumBgGDcomparison.R')
# Calculate BMP, yld and BMPo
#source('BMP.R')
source('BMPcomp.R')
# Clean data prior to analysis
source('merge.R')
# Graphical comparison of methods
# source('plots.R')
source('plot.cumBgGD.comparison.R')
source('xCH4.plots.R')
# Export results
source('export_results.R')
# Export manipulated results
source('export_manipulated.R')
# Export results
source('export_results.R')
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculation of water detection limits
source('water_detect_lim.R')
setwd("~/GitHub/GD-BMP/experiments/IISBMP2/scripts")
# Runs complete analysis of IISBMP2 AU data
# Camilla G. Justesen
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
# Calculate leakage from biogas bottles
source('leak.R')
# Export raw data
source('export.R')
# Calculate biogas production
#source('biogas.R')
source('cumBgGDcomparison.R')
cbg.gd12 <- cumBgGD(biogas,
temp.vol = 'temp.air', pres.vol = 'pres.amb',
temp.grav = 30, pres.grav = 1500,
id.name = 'id', vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'final', vmethod = 'vol',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = FALSE,
addt0 = TRUE, showt0 = TRUE)
# New gd function
cbg.gd <- cumBgGD(biogas,
temp.vol = 'temp.air', pres.vol = 'pres.amb',
temp.grav = 30, pres.grav = 1500,
id.name = 'id',vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'int',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
# extrap = FALSE,
addt0 = TRUE, showt0 = TRUE)
# New gd function
cbg.gd <- cumBgGD(biogas,
temp.vol = 'temp.air', pres.vol = 'pres.amb',
temp.grav = 30, pres.grav = 1500,
id.name = 'id',vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'int',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
View(biogas)
# New gd function
cbg.gd <- cumBgGD(biogas,
temp.vol = 'temp.air', pres.vol = 'pres.amb',
temp.grav = 30, pres.grav = 1500,
id.name = 'id',vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'int',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
cbg.gd1 <- cumBgGD(biogas,
temp.vol = 'temp.air', pres.vol = 'pres.amb',
temp.grav = 30, pres.grav = 1500,
id.name = 'id', vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = FALSE, averaging = 'int', vmethod = 'grav',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
# extrap = FALSE
addt0 = TRUE, showt0 = TRUE)
cbg.gd1 <- cumBgGD(biogas,
temp.vol = 'temp.air', pres.vol = 'pres.amb',
temp.grav = 30, pres.grav = 1500,
id.name = 'id', vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = FALSE, averaging = 'int', vmethod = 'grav',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
cbg.gd9 <- cumBgGD(biogas,
temp.vol = 'temp.air', pres.vol = 'pres.amb',
temp.grav = 30, pres.grav = 1500,
id.name = 'id', vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = FALSE, averaging = 'final', vmethod = 'vol',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
# New gd function
cbg.gd <- cumBgGD(biogas,
temp.vol = 20, pres.vol = 1.01325,
temp.grav = 30, pres.grav = 1.5,
id.name = 'id',vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'int',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
# New gd function
cbg.gd <- cumBgGD(biogas,
temp.vol = 20, pres.vol = 1.01325,
temp.grav = 30, pres.grav = 1.5,
id.name = 'id',vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'final', vmethod = 'grav',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
View(cbg.gd)
# Set BMP duration for all calls
when.BMP <- 30 # (maybe choose another value)
cbg.list <- list(gd = cbg.gd)
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "Inoculum", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
BMP.1p3d <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "Inoculum", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = '1p3d', extrap = TRUE, set.name = 'method')
#BMPo <- ... show.obs = TRUE) (also called rates)
BMPo <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "Inoculum", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method', show.obs = TRUE)
# yld for yield
#yld <- ... when = 'meas')
yld <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "Inoculum", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = 'meas', extrap = TRUE, set.name = 'method')
# Add rsd to data frames
BMP$rsd <- 100 * BMP$sd/BMP$mean
yld$rsd <- 100 * yld$sd/yld$mean
BMP.1p3d$rsd <- 100 * BMP.1p3d$sd/BMP.1p3d$mean
# Add leaklimit column. TRUE == leak is above detection limit
BMP$leak.l <- BMP$descrip %in% large.leaks$descrip
BMPo$leak.l <- BMPo$id %in% large.leaks$id
BMP.1p3d$leak.l <- BMP.1p3d$descrip %in% large.leaks$descrip
# Plots
ggplot(BMP, aes(method, mean), fill = method, color = method) +
geom_bar(stat = 'identity', color = 'black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2)+
ggtitle("GD Method") +
labs(x = "Method", y = "Cumulative CH4 [mL]", colour = "Substrate")  +
facet_grid(~ descrip)
theme_bw() +
theme(text = element_text(size = 10))
# Plots
ggplot(BMP, aes(method, mean), fill = method, color = method) +
geom_bar(stat = 'identity', color = 'black') +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2)+
ggtitle("GD Method") +
labs(x = "Method", y = "Cumulative CH4 [mL]", colour = "Substrate")  +
facet_grid(~ descrip) +
theme_bw() +
theme(text = element_text(size = 10))
ggsave('../plots/GD_methods_barplot.png')
# yld
ggplot(yld, aes(elapsed.time, mean)) +
geom_line() +
facet_wrap(~ descrip)
ggsave('../plots/yld.interaction.png')
# Plot of data before corrected for inoculum (GD)
ggplot(cbg.gd, aes(elapsed.time, cvCH4, colour = id )) +
geom_point() +
geom_line() +
ggtitle("GD Method") +
labs(x = "Elapsed Time [hr]", y = "Cumulative CH4 [mL]", colour = "Substrate")  +
theme_bw() +
theme(text = element_text(size = 10))
ggsave('../plots/GD_biogas.png')
# Camilla G. Justesen
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Export raw data
source('export.R')
# Calculate biogas production
#source('biogas.R')
source('cumBgGDcomparison.R')
# Calculate biogas production
#source('biogas.R')
source('cumBgGDcomparison.R')
# Calculate biogas production
#source('biogas.R')
source('cumBgGDcomparison.R')
# Calculate BMP, yld and BMPo
source('BMP.R')
# New gd function     (apply final, grav, total)
cbg.gd <- cumBgGD(biogas,
temp.vol = 20, pres.vol = 1.01325,
temp.grav = 30, pres.grav = 1.5,
id.name = 'id',vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'final', vmethod = 'grav',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
# Set biogas options
options(unit.pres = 'hPa')
# New gd function     (apply final, grav, total)
cbg.gd <- cumBgGD(biogas,
temp.vol = 20, pres.vol = 1.01325,
temp.grav = 30, pres.grav = 1.5,
id.name = 'id',vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'final', vmethod = 'grav',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Export raw data
source('export.R')
# Calculate biogas production
#source('biogas.R')
source('cumBgGDcomparison.R')
# Runs complete analysis of IISBMP2 AU data
# Camilla G. Justesen
# Load functions
source('functions.R')
# Load packages
source('packages.R')
# Load data
source('load.R')
# Clean data
source('clean.R')
# Calculation of water detection limits
source('water_detect_lim.R')
# Calculate leakage from biogas bottles
source('leak.R')
# Export raw data
source('export.R')
# New gd function     (apply final, grav, total)
cbg.gd <- cumBgGD(biogas,
temp.vol = 20, pres.vol = 1.01325,
temp.grav = 30, pres.grav = 1.5,
id.name = 'id',vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'final', vmethod = 'grav',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
# Set biogas options
options(unit.pres = 'hPa')
# New gd function     (apply final, grav, total)
cbg.gd <- cumBgGD(biogas,
temp.vol = 20, pres.vol = 1.01325,
temp.grav = 30, pres.grav = 1.5,
id.name = 'id',vol.name = 'vol',
m.pre.name = 'mass.init', m.post.name = 'mass.final',
comp.name = 'xCH4', time.name = 'elapsed.time',
vented.mass = TRUE, averaging = 'final', vmethod = 'grav',
# temp.init = 20,
# headspace = setup, vol.hs.name = 'vol.hs', headcomp = 'N2',
extrap = TRUE,
addt0 = TRUE, showt0 = TRUE)
# Set BMP duration for all calls
when.BMP <- 30 # (maybe choose another value)
cbg.list <- list(gd = cbg.gd)
BMP <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "Inoculum", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method')
BMP.1p3d <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "Inoculum", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = '1p3d', extrap = TRUE, set.name = 'method')
#BMPo <- ... show.obs = TRUE) (also called rates)
BMPo <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "Inoculum", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = when.BMP, extrap = TRUE, set.name = 'method', show.obs = TRUE)
# yld for yield
#yld <- ... when = 'meas')
yld <- summBg(cbg.list, setup, id.name = "id",
time.name = 'elapsed.time', descrip.name = 'descrip',
inoc.name = "Inoculum", inoc.m.name = "m.inoc", norm.name = "m.sub.vs",
when = 'meas', extrap = TRUE, set.name = 'method')
# Add rsd to data frames
BMP$rsd <- 100 * BMP$sd/BMP$mean
yld$rsd <- 100 * yld$sd/yld$mean
BMP.1p3d$rsd <- 100 * BMP.1p3d$sd/BMP.1p3d$mean
# Add leaklimit column. TRUE == leak is above detection limit
BMP$leak.l <- BMP$descrip %in% large.leaks$descrip
BMPo$leak.l <- BMPo$id %in% large.leaks$id
BMP.1p3d$leak.l <- BMP.1p3d$descrip %in% large.leaks$descrip
View(BMP)
View(cbg.gd)
